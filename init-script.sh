#!/bin/bash

# Script de inicializaci√≥n para limpiar archivos .git y ocultar informaci√≥n del servidor

echo "üßπ Iniciando configuraci√≥n segura del contenedor..."

# Funci√≥n para logging con timestamp
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# Funci√≥n para copiar archivos sin .git
copy_clean_files() {
    log "üìÇ Copiando archivos del c√≥digo fuente (excluyendo .git)..."
    
    # Limpiar directorio de destino
    rm -rf /usr/share/nginx/html/*
    rm -rf /usr/share/nginx/html/.* 2>/dev/null || true
    
    # Copiar archivos excluyendo .git y archivos relacionados
    if command -v rsync &> /dev/null; then
        log "üîÑ Usando rsync para copia eficiente..."
        rsync -av \
              --exclude='.git' \
              --exclude='.gitignore' \
              --exclude='.gitattributes' \
              --exclude='.github' \
              --exclude='node_modules' \
              --exclude='*.log' \
              --exclude='.env*' \
              /tmp/source/ /usr/share/nginx/html/
    else
        log "üîÑ Usando cp con find..."
        # M√©todo alternativo
        cd /tmp/source
        find . -type f \
             ! -path './.git/*' \
             ! -name '.git*' \
             ! -path './node_modules/*' \
             ! -name '*.log' \
             ! -name '.env*' \
             -exec cp --parents {} /usr/share/nginx/html/ \; 2>/dev/null || true
    fi
    
    log "‚úÖ Archivos copiados sin informaci√≥n sensible"
    
    # Verificar que hay archivos en el destino
    FILE_COUNT=$(find /usr/share/nginx/html -type f | wc -l)
    log "üìä Total de archivos copiados: $FILE_COUNT"
    
    if [ "$FILE_COUNT" -eq 0 ]; then
        log "‚ö†Ô∏è  No se copiaron archivos, creando p√°gina de prueba..."
        echo "<h1>Landing Page - Infinitum Solutions</h1><p>P√°gina en configuraci√≥n...</p>" > /usr/share/nginx/html/index.html
    fi
}

# Ejecutar la copia de archivos limpios
copy_clean_files

# Crear configuraci√≥n personalizada de nginx para ocultar informaci√≥n del servidor
log "üîí Configurando nginx para ocultar informaci√≥n del servidor..."

# Crear directorio de configuraci√≥n si no existe
mkdir -p /etc/nginx/conf.d

# Crear archivo de configuraci√≥n personalizada
cat > /etc/nginx/conf.d/security.conf << 'EOF'
# Ocultar versi√≥n de nginx
server_tokens off;

# Headers de seguridad adicionales
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header X-Content-Type-Options "nosniff" always;
add_header Referrer-Policy "no-referrer-when-downgrade" always;
add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

# Remover headers que revelan informaci√≥n del servidor
more_clear_headers 'Server';
more_clear_headers 'X-Powered-By';
EOF

# Crear configuraci√≥n principal del sitio
cat > /etc/nginx/conf.d/default.conf << 'EOF'
server {
    listen 80;
    server_name localhost;
    
    # Ocultar versi√≥n de nginx en p√°ginas de error
    server_tokens off;
    
    # Directorio ra√≠z
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # Configuraci√≥n para aplicaciones SPA (Single Page Application)
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Cachear archivos est√°ticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Desactivar logs para archivos comunes que no existen
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
    
    # Denegar acceso a archivos sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Denegar acceso a archivos de configuraci√≥n
    location ~* \.(env|git|gitignore|gitattributes)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
EOF

echo "‚úÖ Configuraci√≥n de nginx completada"

# Verificar la configuraci√≥n de nginx
echo "üîç Verificando configuraci√≥n de nginx..."
nginx -t

if [ $? -eq 0 ]; then
    echo "‚úÖ Configuraci√≥n de nginx v√°lida"
    echo "üöÄ Iniciando nginx..."
    
    # Iniciar nginx en primer plano
    exec nginx -g 'daemon off;'
else
    echo "‚ùå Error en la configuraci√≥n de nginx"
    exit 1
fi
